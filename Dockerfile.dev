# Development Dockerfile for TravelAI Platform
# Optimized for development with hot reloading and debugging

FROM node:18-alpine AS development

# Install system dependencies for development
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl \
    bash \
    vim \
    && rm -rf /var/cache/apk/*

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S travelai -u 1001 -G nodejs

# Set working directory
WORKDIR /app

# Install global development tools
RUN npm install -g \
    nodemon \
    concurrently \
    eslint \
    prettier \
    @storybook/cli

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies)
RUN npm install

# Change ownership of node_modules
RUN chown -R travelai:nodejs /app/node_modules

# Copy source code
COPY --chown=travelai:nodejs . .

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/temp /app/coverage && \
    chown -R travelai:nodejs /app/logs /app/uploads /app/temp /app/coverage

# Switch to non-root user
USER travelai

# Expose ports
EXPOSE 3000 8000 9229 6006

# Set environment variables for development
ENV NODE_ENV=development
ENV PORT=8000
ENV FRONTEND_PORT=3000
ENV DEBUG=travelai:*
ENV CHOKIDAR_USEPOLLING=true

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command for development
CMD ["npm", "run", "dev"]

# Labels
LABEL maintainer="TravelAI Team <team@travelai.com>"
LABEL version="1.0.0-dev"
LABEL description="TravelAI Platform - Development Environment"
LABEL environment="development"