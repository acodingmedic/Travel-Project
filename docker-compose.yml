version: '3.8'

services:
  travelai-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: travelai-app
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - FRONTEND_PORT=3000
      - FRONTEND_URL=http://localhost:3000
      - API_BASE_URL=http://localhost:8000
      - MONGODB_URI=mongodb://mongodb:27017/travelai
      - REDIS_URL=redis://:redis123@redis:6379
      - SESSION_SECRET=your-session-secret-here
      - JWT_SECRET=your-jwt-secret-here
    depends_on:
      - mongodb
      - redis
    networks:
      - travelai-network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mongodb:
    image: mongo:6.0
    container_name: travelai-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=travelai
    volumes:
      - mongodb_data:/data/db
    networks:
      - travelai-network

  redis:
    image: redis:7-alpine
    container_name: travelai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - travelai-network

networks:
  travelai-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: